// <auto-generated />
using System;
using GoldAggregator.Parser.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GoldAggregator.Parser.DbContext.Migrations
{
    [DbContext(typeof(ParserDbContext))]
    [Migration("20220526174219_AddPricePerGram")]
    partial class AddPricePerGram
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TranslitName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Москва",
                            TranslitName = "moskva"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Санкт-Петербург",
                            TranslitName = "sankt-peterburg"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Нижний Новгород",
                            TranslitName = "nizhnij-novgorod"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Казань",
                            TranslitName = "kazan"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Сургут",
                            TranslitName = "surgut"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Севастополь",
                            TranslitName = "sevastopol"
                        });
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndMiningYear")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MetalType")
                        .HasColumnType("integer");

                    b.Property<int>("MintCountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nomination")
                        .HasColumnType("text");

                    b.Property<string>("SeoUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartMiningYear")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TranslitName")
                        .HasColumnType("text");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("MintCountryId");

                    b.ToTable("CoinCatalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MetalType = 1,
                            MintCountryId = 22,
                            Name = "Георгий Победоносец",
                            Nomination = "200 рублей",
                            SeoUrl = "zolotaya-moneta_georgij-pobedonosec",
                            TranslitName = "georgij-pobedonosec",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 2,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Буффало",
                            SeoUrl = "zolotaya-moneta_amerikanskij-buffalo",
                            TranslitName = "amerikanskij-buffalo",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 3,
                            MetalType = 1,
                            MintCountryId = 2,
                            Name = "Венский Филармоникер",
                            SeoUrl = "zolotaya-moneta_venskij-filarmoniker",
                            TranslitName = "venskij-filarmoniker",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 4,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Кенгуру",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-kenguru",
                            TranslitName = "avstrallijskij-kenguru",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 5,
                            MetalType = 1,
                            MintCountryId = 9,
                            Name = "Кленовый лист",
                            SeoUrl = "zolotaya-moneta_klenovyj-list",
                            TranslitName = "klenovyj-list",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 6,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Орел",
                            SeoUrl = "zolotaya-moneta_amerikanskij-orel",
                            TranslitName = "amerikanskij-orel",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 7,
                            MetalType = 1,
                            MintCountryId = 5,
                            Name = "Британия",
                            SeoUrl = "zolotaya-moneta_britaniya",
                            TranslitName = "britaniya",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 8,
                            MetalType = 1,
                            MintCountryId = 34,
                            Name = "Крюгерранд",
                            SeoUrl = "zolotaya-moneta_kryugerrand",
                            TranslitName = "kryugerrand",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 9,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Лунар",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-lunar",
                            TranslitName = "avstrallijskij-lunar",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 10,
                            MetalType = 1,
                            MintCountryId = 10,
                            Name = "Панда",
                            SeoUrl = "zolotaya-moneta_panda",
                            TranslitName = "panda",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 11,
                            MetalType = 1,
                            MintCountryId = 22,
                            Name = "Георгий Победоносец",
                            SeoUrl = "zolotaya-moneta_georgij-pobedonosec",
                            TranslitName = "georgij-pobedonosec",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 12,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Буффало",
                            SeoUrl = "zolotaya-moneta_amerikanskij-buffalo",
                            TranslitName = "amerikanskij-buffalo",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 13,
                            MetalType = 1,
                            MintCountryId = 2,
                            Name = "Венский Филармоникер",
                            SeoUrl = "zolotaya-moneta_venskij-filarmoniker",
                            TranslitName = "venskij-filarmoniker",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 14,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Кенгуру",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-kenguru",
                            TranslitName = "avstrallijskij-kenguru",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 15,
                            MetalType = 1,
                            MintCountryId = 9,
                            Name = "Кленовый лист",
                            SeoUrl = "zolotaya-moneta_klenovyj-list",
                            TranslitName = "klenovyj-list",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 16,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Орел",
                            SeoUrl = "zolotaya-moneta_amerikanskij-orel",
                            TranslitName = "amerikanskij-orel",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 17,
                            MetalType = 1,
                            MintCountryId = 5,
                            Name = "Британия",
                            SeoUrl = "zolotaya-moneta_britaniya",
                            TranslitName = "britaniya",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 18,
                            MetalType = 1,
                            MintCountryId = 34,
                            Name = "Крюгерранд",
                            SeoUrl = "zolotaya-moneta_kryugerrand",
                            TranslitName = "kryugerrand",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 19,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Лунар",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-lunar",
                            TranslitName = "avstrallijskij-lunar",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 20,
                            MetalType = 1,
                            MintCountryId = 10,
                            Name = "Панда",
                            SeoUrl = "zolotaya-moneta_panda",
                            TranslitName = "panda",
                            Weight = 15.55m
                        },
                        new
                        {
                            Id = 21,
                            MetalType = 1,
                            MintCountryId = 22,
                            Name = "Георгий Победоносец",
                            SeoUrl = "zolotaya-moneta_georgij-pobedonosec",
                            TranslitName = "georgij-pobedonosec",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 22,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Буффало",
                            SeoUrl = "zolotaya-moneta_amerikanskij-buffalo",
                            TranslitName = "amerikanskij-buffalo",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 23,
                            MetalType = 1,
                            MintCountryId = 2,
                            Name = "Венский Филармоникер",
                            SeoUrl = "zolotaya-moneta_venskij-filarmoniker",
                            TranslitName = "venskij-filarmoniker",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 24,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Кенгуру",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-kenguru",
                            TranslitName = "avstrallijskij-kenguru",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 25,
                            MetalType = 1,
                            MintCountryId = 9,
                            Name = "Кленовый лист",
                            SeoUrl = "zolotaya-moneta_klenovyj-list",
                            TranslitName = "klenovyj-list",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 26,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Орел",
                            SeoUrl = "zolotaya-moneta_amerikanskij-orel",
                            TranslitName = "amerikanskij-orel",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 27,
                            MetalType = 1,
                            MintCountryId = 5,
                            Name = "Британия",
                            SeoUrl = "zolotaya-moneta_britaniya",
                            TranslitName = "britaniya",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 28,
                            MetalType = 1,
                            MintCountryId = 34,
                            Name = "Крюгерранд",
                            SeoUrl = "zolotaya-moneta_kryugerrand",
                            TranslitName = "kryugerrand",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 29,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Лунар",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-lunar",
                            TranslitName = "avstrallijskij-lunar",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 30,
                            MetalType = 1,
                            MintCountryId = 10,
                            Name = "Панда",
                            SeoUrl = "zolotaya-moneta_panda",
                            TranslitName = "panda",
                            Weight = 7.78m
                        },
                        new
                        {
                            Id = 41,
                            MetalType = 1,
                            MintCountryId = 22,
                            Name = "Георгий Победоносец",
                            SeoUrl = "zolotaya-moneta_georgij-pobedonosec",
                            TranslitName = "georgij-pobedonosec",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 42,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Буффало",
                            SeoUrl = "zolotaya-moneta_amerikanskij-buffalo",
                            TranslitName = "amerikanskij-buffalo",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 43,
                            MetalType = 1,
                            MintCountryId = 2,
                            Name = "Венский Филармоникер",
                            SeoUrl = "zolotaya-moneta_venskij-filarmoniker",
                            TranslitName = "venskij-filarmoniker",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 44,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Кенгуру",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-kenguru",
                            TranslitName = "avstrallijskij-kenguru",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 45,
                            MetalType = 1,
                            MintCountryId = 9,
                            Name = "Кленовый лист",
                            SeoUrl = "zolotaya-moneta_klenovyj-list",
                            TranslitName = "klenovyj-list",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 46,
                            MetalType = 1,
                            MintCountryId = 27,
                            Name = "Американский Орел",
                            SeoUrl = "zolotaya-moneta_amerikanskij-orel",
                            TranslitName = "amerikanskij-orel",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 47,
                            MetalType = 1,
                            MintCountryId = 5,
                            Name = "Британия",
                            SeoUrl = "zolotaya-moneta_britaniya",
                            TranslitName = "britaniya",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 48,
                            MetalType = 1,
                            MintCountryId = 34,
                            Name = "Крюгерранд",
                            SeoUrl = "zolotaya-moneta_kryugerrand",
                            TranslitName = "kryugerrand",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 49,
                            MetalType = 1,
                            MintCountryId = 1,
                            Name = "Австраллийский Лунар",
                            SeoUrl = "zolotaya-moneta_avstrallijskij-lunar",
                            TranslitName = "avstrallijskij-lunar",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 50,
                            MetalType = 1,
                            MintCountryId = 10,
                            Name = "Панда",
                            SeoUrl = "zolotaya-moneta_panda",
                            TranslitName = "panda",
                            Weight = 3.11m
                        },
                        new
                        {
                            Id = 51,
                            MetalType = 2,
                            MintCountryId = 22,
                            Name = "Георгий Победоносец",
                            SeoUrl = "serebryanaya-moneta_georgij-pobedonosec",
                            TranslitName = "georgij-pobedonosec",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 52,
                            MetalType = 2,
                            MintCountryId = 27,
                            Name = "Американский Буффало",
                            SeoUrl = "serebryanaya-moneta_amerikanskij-buffalo",
                            TranslitName = "amerikanskij-buffalo",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 53,
                            MetalType = 2,
                            MintCountryId = 2,
                            Name = "Венский Филармоникер",
                            SeoUrl = "serebryanaya-moneta_venskij-filarmoniker",
                            TranslitName = "venskij-filarmoniker",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 54,
                            MetalType = 2,
                            MintCountryId = 1,
                            Name = "Австраллийский Кенгуру",
                            SeoUrl = "serebryanaya-moneta_avstrallijskij-kenguru",
                            TranslitName = "avstrallijskij-kenguru",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 55,
                            MetalType = 2,
                            MintCountryId = 9,
                            Name = "Кленовый лист",
                            SeoUrl = "serebryanaya-moneta_klenovyj-list",
                            TranslitName = "klenovyj-list",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 56,
                            MetalType = 2,
                            MintCountryId = 27,
                            Name = "Американский Орел",
                            SeoUrl = "serebryanaya-moneta_amerikanskij-orel",
                            TranslitName = "amerikanskij-orel",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 57,
                            MetalType = 2,
                            MintCountryId = 5,
                            Name = "Британия",
                            SeoUrl = "serebryanaya-moneta_britaniya",
                            TranslitName = "britaniya",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 58,
                            MetalType = 2,
                            MintCountryId = 34,
                            Name = "Крюгерранд",
                            SeoUrl = "serebryanaya-moneta_kryugerrand",
                            TranslitName = "kryugerrand",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 59,
                            MetalType = 2,
                            MintCountryId = 1,
                            Name = "Австраллийский Лунар",
                            SeoUrl = "serebryanaya-moneta_avstrallijskij-lunar",
                            TranslitName = "avstrallijskij-lunar",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 60,
                            MetalType = 2,
                            MintCountryId = 10,
                            Name = "Панда",
                            SeoUrl = "serebryanaya-moneta_panda",
                            TranslitName = "panda",
                            Weight = 31.11m
                        },
                        new
                        {
                            Id = 61,
                            MetalType = 3,
                            MintCountryId = 2,
                            Name = "Венский Филармоникер",
                            SeoUrl = "platinovaya-moneta_venskij-filarmoniker",
                            TranslitName = "venskij-filarmoniker",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 62,
                            MetalType = 3,
                            MintCountryId = 1,
                            Name = "Австраллийский Кенгуру",
                            SeoUrl = "platinovaya-moneta_avstrallijskij-kenguru",
                            TranslitName = "avstrallijskij-kenguru",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 63,
                            MetalType = 3,
                            MintCountryId = 9,
                            Name = "Кленовый лист",
                            SeoUrl = "platinovaya-moneta_klenovyj-list",
                            TranslitName = "klenovyj-list",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 64,
                            MetalType = 3,
                            MintCountryId = 27,
                            Name = "Американский Орел",
                            SeoUrl = "platinovaya-moneta_amerikanskij-orel",
                            TranslitName = "amerikanskij-orel",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 65,
                            MetalType = 3,
                            MintCountryId = 5,
                            Name = "Британия",
                            SeoUrl = "platinovaya-moneta_britaniya",
                            TranslitName = "britaniya",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 66,
                            MetalType = 3,
                            MintCountryId = 1,
                            Name = "Утконос",
                            SeoUrl = "platinovaya-moneta_utkonos",
                            TranslitName = "utkonos",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 67,
                            MetalType = 3,
                            MintCountryId = 5,
                            Name = "Королевский Герб",
                            SeoUrl = "platinovaya-moneta_korolevskij-gerb",
                            TranslitName = "korolevskij-gerb",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 68,
                            MetalType = 3,
                            MintCountryId = 5,
                            Name = "Белая лошадь Ганновера",
                            SeoUrl = "platinovaya-moneta_belaya-loshad-gannovera",
                            TranslitName = "belaya-loshad-gannovera",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 69,
                            MetalType = 3,
                            MintCountryId = 5,
                            Name = "Белый Грейхаунд Ричмонда",
                            SeoUrl = "platinovaya-moneta_belyj-grejxaund-richmonda",
                            TranslitName = "belyj-grejxaund-richmonda",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 70,
                            MetalType = 3,
                            MintCountryId = 5,
                            Name = "Звери королевы",
                            SeoUrl = "platinovaya-moneta_zveri-korolevy",
                            TranslitName = "zveri-korolevy",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 71,
                            MetalType = 3,
                            MintCountryId = 5,
                            Name = "Белый лев Мортимера",
                            SeoUrl = "platinovaya-moneta_belyj-lev-mortimera",
                            TranslitName = "belyj-lev-mortimera",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 72,
                            MetalType = 3,
                            MintCountryId = 5,
                            Name = "Королевский Единорог",
                            SeoUrl = "platinovaya-moneta_korolevskij-edinorog",
                            TranslitName = "korolevskij-edinorog",
                            Weight = 31.1m
                        },
                        new
                        {
                            Id = 73,
                            MetalType = 3,
                            MintCountryId = 28,
                            Name = "Олимпийские игры",
                            SeoUrl = "platinovaya-moneta_olimpijskie-igry",
                            TranslitName = "olimpijskie-igry",
                            Weight = 15.55m
                        });
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoinFromCatalogId")
                        .HasColumnType("integer");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer");

                    b.Property<string>("Error")
                        .HasColumnType("text");

                    b.Property<DateTime>("ParseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("PriceSpecial")
                        .HasColumnType("numeric");

                    b.Property<string>("PriceSpecialDetails")
                        .HasColumnType("text");

                    b.Property<decimal>("PriceSpecialPerGram")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PriceToBuy")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PriceToBuyPerGram")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PriceToSell")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PriceToSellPerGram")
                        .HasColumnType("numeric");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoinFromCatalogId");

                    b.HasIndex("DealerId");

                    b.ToTable("CoinPrices");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinPriceClick", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("CoinHistoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Ip")
                        .HasColumnType("text");

                    b.Property<DateTime>("RedirectDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CoinHistoryId");

                    b.ToTable("CoinPriceClick");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinPriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoinFromCatalogId")
                        .HasColumnType("integer");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ParseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("PriceSpecial")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PriceToBuy")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PriceToSell")
                        .HasColumnType("numeric");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoinFromCatalogId");

                    b.HasIndex("DealerId");

                    b.ToTable("CoinPriceHistory");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseUrl")
                        .HasColumnType("text");

                    b.Property<int>("DealerType")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("HasDelivery")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ProviderName")
                        .HasColumnType("text");

                    b.Property<int>("UrlInfoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UrlInfoId");

                    b.ToTable("Dealers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseUrl = "https://zoloto-md.ru",
                            DealerType = 4,
                            Description = "Монетный дилер в Москве, Санкт-Петребурге, Нижнем Новгороде, Севастополе, Казани. Покупка и продажа золотых, серебрянных, платиновых монет",
                            HasDelivery = false,
                            Name = "Золотой монетный дом",
                            ProviderName = "ZolotoMdRuProvider",
                            UrlInfoId = 1
                        },
                        new
                        {
                            Id = 2,
                            BaseUrl = "https://monetainvest.ru/",
                            DealerType = 4,
                            Description = "Монетный дилер в Санкт-петребурге. Покупка и продажа золотых, серебрянных, платиновых монет",
                            HasDelivery = true,
                            Name = "Монета",
                            ProviderName = "MonetaInvestProvider",
                            UrlInfoId = 2
                        },
                        new
                        {
                            Id = 3,
                            BaseUrl = "http://zoloto-piter.ru/",
                            DealerType = 4,
                            Description = "Монетный дилер в Санкт-Петербурге. Покупка и продажа золотых, серебрянных, платиновых монет",
                            Name = "ООО «Инвестиции в Золото»",
                            ProviderName = "ZolotoPiterRuProvider",
                            UrlInfoId = 3
                        },
                        new
                        {
                            Id = 4,
                            BaseUrl = "http://a-fin.net/",
                            DealerType = 4,
                            Description = "Монетный дилер в Москве. Покупка и продажа золотых, серебрянных, платиновых монет",
                            Name = "МонетаИнвест",
                            ProviderName = "AFinProvider",
                            UrlInfoId = 4
                        },
                        new
                        {
                            Id = 5,
                            BaseUrl = "https://golddep.ru/",
                            DealerType = 4,
                            Description = "Монетный дилер в Москве. Покупка и продажа золотых, серебрянных, платиновых монет",
                            Name = "Золотой Департамент",
                            ProviderName = "GoldDepProvider",
                            UrlInfoId = 5
                        },
                        new
                        {
                            Id = 6,
                            BaseUrl = "https://9999d.ru/",
                            DealerType = 4,
                            Description = "Монетный дилер в Москве. Покупка и продажа золотых, серебрянных, платиновых монет",
                            Name = "Золото Державы",
                            ProviderName = "GoldDergavaProvider",
                            UrlInfoId = 6
                        },
                        new
                        {
                            Id = 7,
                            BaseUrl = "http://petroinvest.ru/",
                            DealerType = 4,
                            Description = "Монетный дилер в Санкт-Петербурге. Покупка и продажа золотых, серебрянных, платиновых монет",
                            Name = "Петроинвест",
                            ProviderName = "PetroinvestProvider",
                            UrlInfoId = 7
                        },
                        new
                        {
                            Id = 8,
                            BaseUrl = "https://neva-gold.ru/",
                            DealerType = 4,
                            Description = "Золотые слитки в Санкт-Петербурге.",
                            Name = "Neva Gold",
                            ProviderName = "NevaGoldProvider",
                            UrlInfoId = 8
                        },
                        new
                        {
                            Id = 9,
                            BaseUrl = "http://ifk-pik.ru/",
                            DealerType = 4,
                            Description = "Монетный дилер в Санкт-Петербурге. Покупка и продажа золотых, серебрянных, платиновых монет",
                            Name = "Инвестиционно-Финансовая Компания \"Пик\"",
                            ProviderName = "IFK-PikProvider",
                            UrlInfoId = 9
                        },
                        new
                        {
                            Id = 10,
                            BaseUrl = "https://www.numizmatik.ru/",
                            DealerType = 4,
                            Description = "Монетный дилер в Москве. Покупка и продажа золотых, серебрянных, платиновых монет",
                            Name = "Клуб Нумизмат",
                            ProviderName = "NumizmatikProvider",
                            UrlInfoId = 10
                        });
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.DealerCoinMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CoinFromCatalogId")
                        .HasColumnType("integer");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer");

                    b.Property<string>("MatchedName")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoinFromCatalogId");

                    b.HasIndex("DealerId");

                    b.ToTable("DillerCoinMaps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoinFromCatalogId = 3,
                            DealerId = 1,
                            MatchedName = "Золотая инвестиционная монета Австрии Венский Филармоникер, 31,1 гр чистого золота (проба 0,9999)",
                            Url = "https://zoloto-md.ru/bullion-coins/i-inostrannyye/zolotaya-investiczionnaya-moneta-avstrijskij-filarmoniker"
                        },
                        new
                        {
                            Id = 2,
                            CoinFromCatalogId = 5,
                            DealerId = 1,
                            MatchedName = "Золотая монета Канады \"Кленовый Лист\", 31.1 г чистого золота (проба 0.9999)",
                            Url = "https://zoloto-md.ru/bullion-coins/i-inostrannyye/zolotaya-moneta-kanadyi-klenovyij-list,-31.1-g-chistogo-zolota-proba-0.9999"
                        },
                        new
                        {
                            Id = 3,
                            CoinFromCatalogId = 1,
                            DealerId = 1,
                            MatchedName = "Золотая инвестиционная монета Георгий ПОБЕДОНОСЕЦ СПМД 2006 - 2012 г.в., вес чистого золота - 7.78 г (проба 0,999)",
                            Url = "https://zoloto-md.ru/bullion-coins/i-rossiya-i-sssr/zolotaya-investiczionnaya-moneta-georgij-pobedonosecz-spmd"
                        },
                        new
                        {
                            Id = 4,
                            CoinFromCatalogId = 1,
                            DealerId = 1,
                            MatchedName = "Золотая инвестиционная монета Георгий Победоносец СПМД 2018-2022 г.в., 7.78 г чистого золота (проба 0,999)",
                            Url = "https://zoloto-md.ru/bullion-coins/i-rossiya-i-sssr/zolotaya-investiczionnaya-moneta-georgij-pobedonosecz-mmd,-7,78-g-chistogo-zolota-proba-0,999"
                        },
                        new
                        {
                            Id = 5,
                            CoinFromCatalogId = 4,
                            DealerId = 1,
                            MatchedName = "Золотая инвестиционная монета Австралии - Кенгуру 2022 г.в., 31.1 г чистого золота (проба 0,9999)",
                            Url = "https://zoloto-md.ru/bullion-coins/i-inostrannyye/zolotaya-investiczionnaya-moneta-avstralii-kenguru-2022-g.v.,-31.1-g-chistogo-zolota-proba-0,9999"
                        });
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.DealerOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DealerId");

                    b.ToTable("DealerOffices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            DealerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            DealerId = 1
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            DealerId = 1
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            DealerId = 1
                        },
                        new
                        {
                            Id = 5,
                            CityId = 6,
                            DealerId = 1
                        },
                        new
                        {
                            Id = 6,
                            CityId = 2,
                            DealerId = 2
                        },
                        new
                        {
                            Id = 7,
                            CityId = 2,
                            DealerId = 3
                        },
                        new
                        {
                            Id = 8,
                            CityId = 1,
                            DealerId = 4
                        },
                        new
                        {
                            Id = 9,
                            CityId = 1,
                            DealerId = 5
                        },
                        new
                        {
                            Id = 10,
                            CityId = 1,
                            DealerId = 6
                        },
                        new
                        {
                            Id = 11,
                            CityId = 2,
                            DealerId = 7
                        },
                        new
                        {
                            Id = 12,
                            CityId = 2,
                            DealerId = 8
                        },
                        new
                        {
                            Id = 13,
                            CityId = 2,
                            DealerId = 9
                        },
                        new
                        {
                            Id = 14,
                            CityId = 1,
                            DealerId = 10
                        });
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.MintCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TranslitName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MintCountries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Австралия",
                            TranslitName = "avstraliya"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Австрия",
                            TranslitName = "avstriya"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Армения",
                            TranslitName = "armeniya"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Беларусь",
                            TranslitName = "belarus"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Великобритания",
                            TranslitName = "velikobritaniya"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Германия",
                            TranslitName = "germaniya"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Казахстан",
                            TranslitName = "kazaxstan"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Камерун",
                            TranslitName = "kamerun"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Канада",
                            TranslitName = "kanada"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Китай",
                            TranslitName = "kitaj"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Конго",
                            TranslitName = "kongo"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Кыргыстан",
                            TranslitName = "kyrgystan"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Либерия",
                            TranslitName = "liberiya"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Малави",
                            TranslitName = "malavi"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Мексика",
                            TranslitName = "meksika"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Монголия",
                            TranslitName = "mongoliya"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Науру",
                            TranslitName = "nauru"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Ниуэ",
                            TranslitName = "niue"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Острова Мэн",
                            TranslitName = "ostrova-men"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Острова Кука",
                            TranslitName = "ostrova-kuka"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Палау",
                            TranslitName = "palau"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Россия",
                            TranslitName = "rossiya"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Руанда",
                            TranslitName = "ruanda"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Сент-Китс И Невис",
                            TranslitName = "sent-kits-i-nevis"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Соломоновы Острова",
                            TranslitName = "solomonovy-ostrova"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Сомали",
                            TranslitName = "somali"
                        },
                        new
                        {
                            Id = 27,
                            Name = "США",
                            TranslitName = "ssha"
                        },
                        new
                        {
                            Id = 28,
                            Name = "СССР",
                            TranslitName = "sssr"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Тувалу",
                            TranslitName = "tuvalu"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Украина",
                            TranslitName = "ukraina"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Фиджи",
                            TranslitName = "fidzhi"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Франция",
                            TranslitName = "franciya"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Швейцария",
                            TranslitName = "shvejcariya"
                        },
                        new
                        {
                            Id = 34,
                            Name = "ЮАР",
                            TranslitName = "yuar"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Южная Корея",
                            TranslitName = "yuzhnaya-koreya"
                        });
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<int>("ExternalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UrlInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UrlInfoId");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("Urls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UrlInfoId = 1,
                            Value = "https://zoloto-md.ru"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UrlInfoId = 2,
                            Value = "https://monetainvest.ru"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UrlInfoId = 3,
                            Value = "http://zoloto-piter.ru"
                        });
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.UrlInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<string>("ProviderName")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProviderName")
                        .IsUnique();

                    b.ToTable("UrlInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProviderName = "ZolotoMdRuProvider"
                        },
                        new
                        {
                            Id = 2,
                            ProviderName = "MonetaInvestProvider"
                        },
                        new
                        {
                            Id = 3,
                            ProviderName = "ZolotoPiterRuProvider"
                        },
                        new
                        {
                            Id = 4,
                            ProviderName = "Удалить"
                        },
                        new
                        {
                            Id = 5,
                            ProviderName = "Удалить2"
                        },
                        new
                        {
                            Id = 6,
                            ProviderName = "Удалить3"
                        },
                        new
                        {
                            Id = 7,
                            ProviderName = "Удалить4"
                        },
                        new
                        {
                            Id = 8,
                            ProviderName = "Удалить5"
                        },
                        new
                        {
                            Id = 9,
                            ProviderName = "Удалить6"
                        },
                        new
                        {
                            Id = 10,
                            ProviderName = "Удалить7"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d0c691d4-98dc-4ee6-b9db-633fcc9c238e",
                            ConcurrencyStamp = "90702784-4b11-4b0f-b905-ae533730f3cd",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "25723030-b8e5-4b2a-8c06-5cf170e3443b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ac88e11-e377-4a49-bef9-ed7767ff6f9d",
                            Email = "admin@mail.ru",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.RU",
                            NormalizedUserName = "ADMIN@MAIL.RU",
                            PasswordHash = "AQAAAAEAACcQAAAAEA7vpzNBUIMLvB4bdfb8xX5IIsMZ86GfG1In4YX3q8BYyZoFQYSGuVOVWB3XfCdZOA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6FPVSOIY6BCPOQH4BZUCNYIKQ5WB4VRM",
                            TwoFactorEnabled = false,
                            UserName = "admin@mail.ru"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "25723030-b8e5-4b2a-8c06-5cf170e3443b",
                            RoleId = "d0c691d4-98dc-4ee6-b9db-633fcc9c238e"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinCatalog", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.MintCountry", "MintCountry")
                        .WithMany("CatalogItems")
                        .HasForeignKey("MintCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MintCountry");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinPrice", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.CoinCatalog", "CoinCatalog")
                        .WithMany("CoinPrices")
                        .HasForeignKey("CoinFromCatalogId");

                    b.HasOne("GoldAggregator.Parser.Entities.Entities.Dealer", "Dealer")
                        .WithMany("CoinPrices")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoinCatalog");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinPriceClick", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.CoinPriceHistory", "CoinHistory")
                        .WithMany("CoinsRedirects")
                        .HasForeignKey("CoinHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoinHistory");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinPriceHistory", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.CoinCatalog", "CoinCatalog")
                        .WithMany("CoinsPriceHistory")
                        .HasForeignKey("CoinFromCatalogId");

                    b.HasOne("GoldAggregator.Parser.Entities.Entities.Dealer", "Dealer")
                        .WithMany("CoinsPriceHistory")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoinCatalog");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.Dealer", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.UrlInfo", "UrlInfo")
                        .WithMany("Dealers")
                        .HasForeignKey("UrlInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UrlInfo");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.DealerCoinMap", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.CoinCatalog", "CoinCatalog")
                        .WithMany("DillerCoinMaps")
                        .HasForeignKey("CoinFromCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldAggregator.Parser.Entities.Entities.Dealer", "Dealer")
                        .WithMany("DillerCoinMaps")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoinCatalog");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.DealerOffice", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.City", "City")
                        .WithMany("Offices")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldAggregator.Parser.Entities.Entities.Dealer", "Dealer")
                        .WithMany("Offices")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.Url", b =>
                {
                    b.HasOne("GoldAggregator.Parser.Entities.Entities.UrlInfo", "UrlInfo")
                        .WithMany("Urls")
                        .HasForeignKey("UrlInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UrlInfo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.City", b =>
                {
                    b.Navigation("Offices");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinCatalog", b =>
                {
                    b.Navigation("CoinPrices");

                    b.Navigation("CoinsPriceHistory");

                    b.Navigation("DillerCoinMaps");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.CoinPriceHistory", b =>
                {
                    b.Navigation("CoinsRedirects");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.Dealer", b =>
                {
                    b.Navigation("CoinPrices");

                    b.Navigation("CoinsPriceHistory");

                    b.Navigation("DillerCoinMaps");

                    b.Navigation("Offices");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.MintCountry", b =>
                {
                    b.Navigation("CatalogItems");
                });

            modelBuilder.Entity("GoldAggregator.Parser.Entities.Entities.UrlInfo", b =>
                {
                    b.Navigation("Dealers");

                    b.Navigation("Urls");
                });
#pragma warning restore 612, 618
        }
    }
}
